import express from 'express';
import fetch from 'node-fetch';
import dotenv from 'dotenv';
import { Bot } from 'grammy';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã –∏–∑ —Ñ–∞–π–ª–∞ .env
dotenv.config();

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Express
const app = express();
const PORT = 3000;

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –∫–æ—Ä–Ω–µ–≤–æ–≥–æ URL
app.get('/', (req, res) => {
    res.send('Hello s8');
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä Express –Ω–∞ –ø–æ—Ä—Ç—É 3000
app.listen(PORT, () => console.log(`My server is running on port ${PORT}`));

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
const BOT_TOKEN = process.env.TCC_BOT_TOKEN;

// ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
const CHANNEL_ID = '@-1002058965646';

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
const bot = new Bot(BOT_TOKEN);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API Telegram
async function sendTelegramRequest(method, data = {}) {
    const url = `https://api.telegram.org/bot${BOT_TOKEN}/${method}`;
    const response = await fetch(url, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
    });
    return await response.json();
}

async function sendCommentToChannel(chatId, messageId, text) {
    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º, —É–∫–∞–∑—ã–≤–∞—è ID —Å–æ–æ–±—â–µ–Ω–∏—è, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        await bot.api.sendMessage(chatId, text, { reply_to_message_id: messageId, parse_mode: 'HTML' });

        console.log('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', error);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
let lastUpdateId = 0;

async function checkChannelForNewPosts() {
    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        await bot.init();

        // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –∫–∞–Ω–∞–ª–∞ Telegram
        const updates = await sendTelegramRequest('getUpdates', {
            channel_id: CHANNEL_ID,
            offset: lastUpdateId + 1,
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
        if (updates && updates.ok) {
            const newPosts = updates.result;
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –ø–æ—Å—Ç
            for (const post of newPosts) {
                if (
                    post &&
                    post.message &&
                    post.message.message_id &&
                    post.message.forward_from_chat &&
                    post.message.forward_from_chat.type === 'channel'
                ) {
                    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
                    const botInfo = await bot.api.getMe();
                    const botId = botInfo.id;
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–æ–º
                    if (post.message.sender_chat.id !== botId) {
                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–¥ –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –ø–æ—Å—Ç–æ–º
                        
                        const messageId = post.message.message_id;
                        const chatId = post.message.chat.id;

                        const text = 'üìú<code>–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö:\n ‚Äî –ù–µ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤;\n ‚Äî –ù–µ –æ–±—Å—É–∂–¥–∞—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É;\n ‚Äî –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç 18+;\n ‚Äî –ù–µ —Ä–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–∞–Ω–∞–ª—ã;\n ‚Äî –ù–µ –±—ã—Ç—å –¥–æ–ª–±–æ—ë–±–æ–º.</code>';
                        console.log(chatId, messageId);

                        sendCommentToChannel(chatId, messageId, text);

                        /*try {
                            await bot.api.sendMessage(chatId, text, { reply_to_message_id: messageId });
                            console.log('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
                        } catch (error) {
                            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', error);
                        }*/
                    }
                
                } else {
                    console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å—Ç–µ:', post);
                }
                // –û–±–Ω–æ–≤–ª—è–µ–º lastUpdateId
                lastUpdateId = Math.max(lastUpdateId, post.update_id);
            }
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞–Ω–∞–ª–∞ –Ω–∞ –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã:', error);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π lastUpdateId
checkChannelForNewPosts();

setInterval(() => checkChannelForNewPosts(), 5000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª –Ω–∞ –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥